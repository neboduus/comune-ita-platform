# Sposto gli imports nei singoli config perchè la security non può essere sovrascritta
#imports:
#    - { resource: parameters.yml }
#    - { resource: security.yml }
#    - { resource: services.yml }
#    - { resource: bundles/ }
#    - { resource: "@AppBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration

framework:
  default_locale: "it"
  #esi:             ~
  translator:
    fallbacks:
      - "it"
  secret: "%secret%"
  router:
    resource: "%kernel.root_dir%/config/routing.yml"
    strict_requirements: ~
  form: ~
  csrf_protection: ~
  validation: { enable_annotations: true }
  #serializer:      { enable_annotations: true }
  templating:
    engines: [ 'twig' ]
  trusted_hosts: ~
  session:
    # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
    handler_id: null
    save_path: "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    cookie_path: "/%prefix%"
  fragments: ~
  http_method_override: true
  assets: ~
  request:
    formats:
      text: [ 'text/plain' ]

#parameters:
#  container.autowiring.strict_mode: true

# Fos User Configuration
fos_user:
  registration:
    form:
      validation_groups: [ strengthPassword ]
  change_password:
    form:
      validation_groups: [ strengthPassword ]

# Twig Configuration
twig:
  debug: "%kernel.debug%"
  strict_variables: "%kernel.debug%"
  form_themes:
    - 'bootstrap_4_layout.html.twig'
    - 'VichUploaderBundle:Form:fields.html.twig'
    - 'AppBundle:Form:fields.html.twig'
  globals:
    header_top:
      title: "%header_top_title%"
      link: "%header_top_link%"
    footer_credits: "%footer_credits%"
    ocsdc_iter_duration_start_status: "%ocsdc_iter_duration_start_status%"
    ocsdc_iter_duration_end_statuses: "%ocsdc_iter_duration_end_statuses%"
    ocsdc_default_date_format: "%ocsdc_default_date_format%"
    ocsdc_default_datetime_format: "%ocsdc_default_datetime_format%"
    ocsdc_slim_datetime_format: "%ocsdc_slim_datetime_format%"
    ocsdc_default_moment_datetime_format: "%ocsdc_default_moment_datetime_format%"
    ocsdc_default_time_format: "%ocsdc_default_time_format%"
    ocsdc_scheme: "%ocsdc_scheme%"
    ocsdc_host: "%ocsdc_host%"
    instance_service: "@ocsdc.instance_service"
    version_service: '@AppBundle\Services\VersionService'
    backoffices: "@ocsdc.backoffices"
    login_route: "%login_route%"
    protocollo_handler: "@ocsdc.protocollo.handler"
    locale: "%locale%"
    app_locales: "%app_locales%"
    prefix: "%prefix%"


# Doctrine Configuration
doctrine:
  dbal:
    driver: "%database_driver%"
    host: "%database_host%"
    port: "%database_port%"
    dbname: "%database_name%"
    user: "%database_user%"
    password: "%database_password%"
    charset: UTF8
    wrapper_class: 'AppBundle\Doctrine\DBAL\Connection'
    driver_class: 'AppBundle\Doctrine\DBAL\Driver\PDOPgSql\Driver'
    options:
      x_reconnect_attempts: "%database_reconnect_attemps%" #3
    # if using pdo_sqlite as your database driver:
    #   1. add the path in parameters.yml
    #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
    #   2. Uncomment database_path in parameters.yml.dist
    #   3. Uncomment next line:
    #     path:     "%database_path%"

    #TODO: find a way to mask this from migrations, but let dbal see it
    #schema_filter: ~^(?!craue_form_flow_storage)~
  orm:
    auto_generate_proxy_classes: "%kernel.debug%"
    naming_strategy: doctrine.orm.naming_strategy.underscore
    auto_mapping: true
    dql:
      string_functions:
        FORMIO_JSON_FIELD: AppBundle\FormIO\FormIOJsonFieldParser
        JSON_FIELD: AppBundle\Doctrine\JsonFieldParser
        JSON_TEXT: AppBundle\Doctrine\JSONText
        JSONB_ARRAY_ELEMENTS_TEXT: AppBundle\Doctrine\JsonbArrayElementsText
    mappings:
      translatable:
        type: annotation
        is_bundle: false
        prefix: Gedmo\Translatable\Entity
        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
        alias: GedmoTranslatable

# Swiftmailer Configuration
swiftmailer:
  transport: "%mailer_transport%"
  host: "%mailer_host%"
  port: "%mailer_port%"
  username: "%mailer_user%"
  password: "%mailer_password%"
  encryption: "%mailer_encription%"
  spool: { type: memory }


# LoginGate Configuration
login_gate:
  storages: [ 'orm' ] # Attempts storages. Available storages: ['orm', 'session', 'mongodb']
  options:
    max_count_attempts: 3
    timeout: 600 #Ban period
    watch_period: 3600 #Only for databases storage. Period of actuality attempts

# EasyAudit Configuration
xiidea_easy_audit:
  entity_class: AppBundle\Entity\AuditLog
  user_property: username
  #doctrine_entities:
  #    AppBundle\Entity\OperatorUser: [created, updated, deleted]
  #    AppBundle\Entity\AdminUser: [created, updated, deleted]
  events:
    - security.interactive_login
    - security.authentication.failure
    - fos_user.change_password.edit.completed
    - fos_user.resetting.reset.completed
    - ocsdc.pratica.on_status_change
  custom_resolvers:
    ocsdc.pratica.on_status_change: log_resolver.applicant_browser
  logger_channel:
    xiidea.easy_audit.logger.service: [ "info", "debug" ]
    file.logger: [ "!info", "!debug" ]

# DataTables Configuration
datatables:
  # Load i18n data from DataTables CDN or locally
  language_from_cdn: true
  # Default HTTP method to be used for callbacks
  method: POST # One of "GET"; "POST"
  # Default options to load into DataTables
  options:
    searching: true
    ordering: true
  #    option: value
  # Where to persist the current table state automatically
  persist_state: none # One of "none"; "query"; "fragment"; "local"; "session"
  # Default service used to render templates, built-in TwigRenderer uses global Twig environment
  renderer: Omines\DataTablesBundle\Twig\TwigRenderer
  # Default template to be used for DataTables HTML
  template: '@DataTables/datatable_html.html.twig'
  # Default parameters to be passed to the template
  template_parameters:
    # Default class attribute to apply to the root table elements
    className: 'table table-sm table-striped'
    # If and where to enable the DataTables Filter module
    columnFilter: null # One of "thead"; "tfoot"; "both"; null
  # Default translation domain to be used
  translation_domain: messages

# FOSRestBundle Configuration
fos_rest:
  versioning:
    enabled: true
    resolvers:
      query: true # Query parameter: /?version=1
      custom_header: true # X-Accept-Version header
  view:
    view_response_listener: true
    #formats:
    #    json: true
    #templating_formats:
    #    html: true
  serializer:
    serialize_null: true
  exception:
    enabled: false #Deprecated in Symfony 4.0
  format_listener:
    rules:
      - { path: ^/%prefix%/api, prefer_extension: true, fallback_format: json, priorities: [ 'json' ] }
      - { path: ^/%prefix%, prefer_extension: true, fallback_format: html, priorities: [ 'html', '*/*' ] }

# Nelmio Api Doc Configuration
nelmio_api_doc:
  documentation:
    info:
      x-api-id: "sdc-api-2-2-0"
      x-audience: "external-public"
      title: "SDC Api Definition"
      description: ""
      version: "2.2.0"
      contact:
        name: "Opencontent S.c.a.r.l"
        email: "support@opencontent.it"
        url: "https://www.opencontent.it/"
      license:
        name: "GNU General Public License, version 2"
        url: "https://www.gnu.org/licenses/old-licenses/gpl-2.0.html"
    securityDefinitions:
      Bearer:
        type: apiKey
        description: 'Authorization: Bearer {jwt}'
        name: Authorization
        in: header
    security:
      - Bearer: [ ]
  areas:
    default:
      path_patterns: # an array of regexps
        #- ^/%prefix%/api(?!/doc$)
        - ^/%prefix%/api/(services|services-groups|applications|subscription-services|subscriptions|calendars|meetings|folders|documents|messages|users|tenants|categories|recipients|geographic-areas|subscribers|payments)(?!/doc$)
    v2:
      name_patterns:
        - ^v2

# Lexit jwt Configuration
lexik_jwt_authentication:
  secret_key: "%kernel.project_dir%/config/jwt/private.pem"
  public_key: "%kernel.project_dir%/config/jwt/public.pem"
  pass_phrase: 'stanzadelcittadino'
  token_ttl: "%token_ttl%"

# Recaptcha configuration
ewz_recaptcha:
  api_host: '%recaptcha_api_host%'
  public_key: '%recaptcha_key%'
  private_key: '%recaptcha_secret%'
  # Not needed as "%kernel.default_locale%" is the default value for the locale key
  locale_key: '%kernel.default_locale%'

# Sentry
sentry:
  dsn: '%sentry_dsn%'
  options:
    excluded_exceptions:
      - Symfony\Component\Security\Core\Exception\AccessDeniedException
      - Symfony\Component\Security\Core\Exception\AuthenticationCredentialsNotFoundException
      - Symfony\Component\HttpKernel\Exception\NotFoundHttpException

# Flagception configuration
flagception:
  # Your Features (optional you left it empty)
  features:
    # Feature name as key
    feature_new_outdatedbrowser:
      # Default flag if inactive or active (default: false)
      default: true
      env: FEATURE_NEW_OUTDATED_BROWSER
    feature_application_detail:
      default: true
      env: FEATURE_APPLICATION_DETAIL
    feature_calendar_type:
      default: true
      env: FEATURE_CALENDAR_TYPE
    feature_analytics:
      default: false
      env: FEATURE_ANALYTICS

# Prometheus
artprima_prometheus_metrics:
  # namespace is used to prefix the prometheus metrics
  namespace: sdc
  ignored_routes: [prometheus, _wdt]
  # metrics backend type
  type: in_memory # possible values: in_memory, apcu, redis --> Incompatible use of dynamic environment variables "METRICS_TYPE" found in parameters.
  redis:
    host: "%metrics_redis_host%"
    port: "%metrics_redis_port%"
    timeout: 0.1
    read_timeout: 10
    persistent_connections: true
    password: "%metrics_redis_password%"

# Read the documentation: https://github.com/1up-lab/OneupFlysystemBundle/tree/master/Resources/doc/index.md
oneup_flysystem:
  adapters:
    s3_adapter:
      awss3v3:
        client: ocsdc.s3_client
        bucket: "%s3_bucket%"
        prefix: 'uploads'
    local_adapter:
      local:
        directory: '%kernel.root_dir%/../var/uploads'
  filesystems:
    s3_filesystem:
      adapter: s3_adapter
      mount: s3_filesystem
      # optional - defines the default visibility of the filesystem: `public` or `private`(default)
      visibility: private
      alias: s3_filesystem
    local_filesystem:
      adapter: local_adapter
      mount: local_filesystem
      alias: local_filesystem

# Breadcrumbs
white_october_breadcrumbs:
  separator: '/'
  separatorClass: 'separator'
  listId: 'breadcrumb'
  listClass: 'breadcrumb'
  itemClass: 'breadcrumb-item'
  linkRel: ''
  locale: ~ # defaults to null, so the default locale is used
  translation_domain: ~ # defaults to null, so the default domain is used
  viewTemplate: 'WhiteOctoberBreadcrumbsBundle::microdata.html.twig'

# Html purifier
exercise_html_purifier:
  default_cache_serializer_path: '%kernel.cache_dir%/htmlpurifier'

bazinga_js_translation:
  locale_fallback: "%locale%"
  default_domain: messages
  active_locales:
    - it
    - en
    - de
  active_domains:
    - messages
