#!/usr/bin/env php
<?php

use App\InstancesProvider;
use App\Kernel;
use App\InstanceKernel;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\ErrorHandler\Debug;
use Symfony\Component\Yaml\Yaml;

if (!in_array(PHP_SAPI, ['cli', 'phpdbg', 'embed'], true)) {
    echo 'Warning: The console should be invoked via the CLI version of PHP, not the '.PHP_SAPI.' SAPI'.PHP_EOL;
}

set_time_limit(0);

require dirname(__DIR__).'/vendor/autoload.php';

if (!class_exists(Application::class)) {
    throw new LogicException('You need to add "symfony/framework-bundle" as a Composer dependency.');
}

$input = new ArgvInput();
if (null !== $env = $input->getParameterOption(['--env', '-e'], null, true)) {
    putenv('APP_ENV='.$_SERVER['APP_ENV'] = $_ENV['APP_ENV'] = $env);
}

$instance = $input->getParameterOption(['--instance', '-i'], '');

if ($input->hasParameterOption('--no-debug', true)) {
    putenv('APP_DEBUG='.$_SERVER['APP_DEBUG'] = $_ENV['APP_DEBUG'] = '0');
}

require dirname(__DIR__).'/config/bootstrap.php';

if ($_SERVER['APP_DEBUG']) {
    umask(0000);

    if (class_exists(Debug::class)) {
        Debug::enable();
    }
}

if (!empty($instance)) {
  $instanceProvider = InstancesProvider::factory();
  if (!$instanceProvider->hasInstance($instance)) {
    throw new Exception("Instance $instance not found");
  }
  $kernel = new InstanceKernel($_SERVER['APP_ENV'], (bool) $_SERVER['APP_DEBUG']);
  $kernel->setIdentifier($instance);
  $kernel->setInstanceParameters($instanceProvider->getInstance($instance));
} else {
  $kernel = new Kernel($_SERVER['APP_ENV'], (bool) $_SERVER['APP_DEBUG']);
}

$application = new Application($kernel);

// Aggiungo l'opzione instance all'input definition altrimenti da errore
$inputDefinition = $application->getDefinition();
$inputDefinition->addOption(
  new InputOption('instance', 'i', InputOption::VALUE_OPTIONAL, 'Name of the Instance', null)
);

$application->run($input);
