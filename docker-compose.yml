version: '3'
services:
  cron:
    depends_on:
      - ocsdc
    build:
      context: .
      dockerfile: Dockerfile_cron
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - "${SHARED_UPLOADS_MOUNT}:/docroot/var/uploads"
      - "${CRON_LOGS_MOUNT}_cron:/docroot/var/logs"
      #- "${CACHE_MOUNT}_cron:/docroot/var/cache"

  ocsdc:
    build: .
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - web:/docroot/web
      - "${SHARED_UPLOADS_MOUNT}:/docroot/var/uploads"
      - "${LOGS_MOUNT}:/docroot/var/logs"
      #- "${CACHE_MOUNT}:/docroot/var/cache"
      - "${SESSIONS_MOUNT}:/docroot/var/sessions"
      - ./compose_conf/fpm_pool:/etc/php/7.3/fpm/pool.d
      - ./compose_conf/php-fpm.conf:/etc/php/7.3/fpm/php-fpm.conf
  nginx:
    depends_on:
      - ocsdc
    image: nginx:alpine
    ports:
      - "8080:80"
    restart: unless-stopped
    volumes:
      - web:/usr/share/nginx/html:ro
      - ./compose_conf/site.conf:/etc/nginx/conf.d/default.conf

  mongo:
    image: mongo
    restart: unless-stopped
    volumes:
      - 'mongo:/data/formmanager'
      - './compose_conf/mongo/dump/:/dump/'
      - './compose_conf/mongo/restore.sh:/docker-entrypoint-initdb.d/restore.sh:ro'

  formserver:
    image: registry.gitlab.com/opencontent/formmanagerserver:1.0.3
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      DB_URL: mongodb://mongo:27017/formmanager
    depends_on:
      - mongo

  mongodb-backup:
    image: deenoize/mongodb-backup-s3
    restart: unless-stopped
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID_BACKUP}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY_BACKUP}
      BUCKET: ${BUCKET_BACKUP}
      BUCKET_REGION: eu-west-1
      MONGODB_DBNAME: formmanager
      TZ: EU/Rome
      CRON_TZ: EU/Rome
      #DISABLE_CRON: 'true'
      #INIT_BACKUP: 'false'
      #INIT_RESTORE: 'false'
      MONGODB_HOST: 'mongo'
      MONGODB_PORT: 27017
      EXTRA_OPTS: '--forceTableScan'
    depends_on:
      - mongo

volumes:
  web:
  mongo:
  #mongo-backup:
