<?php

namespace AppBundle\Entity;

use DateTime;
use Doctrine\ORM\EntityRepository;

/**
 * MeetingRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class MeetingRepository extends EntityRepository
{
  public function countFutureMeetingsByCalendar(Calendar $calendar)
  {
    $date = new DateTime();

    return $this->createQueryBuilder('meeting')
      ->select('count(meeting.id)')
      ->where('meeting.calendar = :calendar')
      ->andWhere('meeting.status = :pending or meeting.status = :approved or meeting.status = :draft')
      ->andWhere('meeting.fromTime >= :now or meeting.toTime >= :now')
      ->setParameter('calendar', $calendar->getId())
      ->setParameter('draft', Meeting::STATUS_DRAFT)
      ->setParameter('pending', Meeting::STATUS_PENDING)
      ->setParameter('approved', Meeting::STATUS_APPROVED)
      ->setParameter('now', $date->format('Y-m-d h:i:s'))
      ->getQuery()->getSingleScalarResult();
  }

  public function countModeratedMeetingsByCalendar(Calendar $calendar)
  {
    $date = new DateTime();

    return $this->createQueryBuilder('meeting')
      ->select('count(meeting.id)')
      ->where('meeting.calendar = :calendar')
      ->andWhere('meeting.status = :pending')
      ->andWhere('meeting.fromTime >= :now or meeting.toTime >= :now')
      ->setParameter('calendar', $calendar->getId())
      ->setParameter('pending', Meeting::STATUS_PENDING)
      ->setParameter('now', $date->format('Y-m-d h:i:s'))
      ->getQuery()->getSingleScalarResult();
  }

}
