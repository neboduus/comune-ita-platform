{% extends '@App/Default/index.html.twig' %}

{% block stylesheets %}
  {{ encore_entry_link_tags('subscription-service-manager') }}
  <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/w/bs4/dt-1.10.18/datatables.min.css"/>
  <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.css">
{% endblock %}

{% block javascripts %}
  {{ encore_entry_script_tags('subscription-service-manager') }}
  <script type="text/javascript" src="https://code.jquery.com/jquery-3.3.1.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/v/dt/jq-3.2.1/dt-1.10.16/datatables.min.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.6.1/js/dataTables.buttons.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.html5.min.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.6.1/js/dataTables.buttons.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.print.min.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.flash.min.js"></script>
  <script src="{{ asset('bundles/datatables/js/datatables.js') }}"></script>

  <script>
    function getFileSize(uploadField, index = 0) {
      let _size = uploadField.files[index].size;
      let fSExt = ['Bytes', 'KB', 'MB', 'GB']
      let i = 0;
      while (_size > 900) {
        _size /= 1024;
        i++;
      }
      return (Math.round(_size * 100) / 100) + ' ' + fSExt[i];
    }

    $("#import_subscribers_btn").click(function (e) {
      $("#import_subscribers_errors").html("");
      $("#import_subscribers_message").html("");
      $("div#spinner").show();

      let files = $('#subcribers_upload').prop('files');
      if (files.length === 0) {
        $("#import_subscribers_errors").append('<p class="text-danger"><svg class="icon-expand icon icon-sm icon-danger mr-2">' +
          '<use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-close"></use>' +
          '</svg>{{ "iscrizioni.missing_file" | trans }}</p>');
        return;
      }

      let data = new FormData();
      data.append("upload", files[0]);

      $.ajax({
        url: $(this).attr('data-url'),
        type: "post",
        data: data,
        processData: false, //tell jquery not to process data
        contentType: false, //tell jquery not to set content-type
        success: function (response, status, jqxhr) {
          $("div#spinner").hide();
        },
        error: function (jqxhr) {
          $("div#spinner").hide();

          // todo: manage error
          let errors = jqxhr.responseJSON.errors || [];
          errors.forEach(function (error) {
            $("#import_subscribers_errors").append(`<p class="text-danger"><svg class="icon-expand icon icon-sm icon-danger mr-2">
            <use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-close"></use>
          </svg>${error}</p>`);
          })
        },
        complete: function (jqxhr) {
          let importMessage = jqxhr.responseJSON.import_message;
          let isEmpty  = jqxhr.responseJSON.subscriptions.length === 0
          $("#import_subscribers_message").append(`<p class="${isEmpty ? "text-danger" : "text-success"}"><svg class="icon-expand icon icon-sm ${isEmpty ? "icon-danger" : "icon-success"} mr-2">
            <use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#${isEmpty ? "it-close" : "it-check"}"></use>
          </svg>${importMessage}</p>`);
        }
      });
    })

    $("#import_payments_btn").click(function (e) {
      $("#import_payments_errors").html("");
      $("#import_payments_message").html("");
      $("div#spinner").show();

      let files = $('#payments_upload').prop('files');
      if (files.length === 0) {
        $("#import_payments_errors").append('<p class="text-danger"><svg class="icon-expand icon icon-sm icon-danger mr-2">' +
          '<use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-close"></use>' +
          '</svg>{{ "iscrizioni.missing_file" | trans }}</p>');
        return
      }
      let paymentConfig = $('#select_payment').val();

      let data = new FormData();
      data.append("upload", files[0]);
      data.append("payment", paymentConfig)

      $.ajax({
        url: $(this).attr('data-url'),
        type: "post",
        data: data,
        processData: false, //tell jquery not to process data
        contentType: false, //tell jquery not to set content-type
        success: function (response, status, jqxhr) {
          $("div#spinner").hide();
        },
        error: function (jqxhr) {
          $("div#spinner").hide();
          // todo: manage error
          let errors = jqxhr.responseJSON.errors || [];

          errors.forEach(function (error) {
            $("#import_payments_errors").append(`<p class="text-danger"><svg class="icon-expand icon icon-sm icon-danger mr-2">
            <use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-close"></use>
          </svg>${error}</p>`);
          })
        },
        complete: function (jqxhr) {
          let importMessage = jqxhr.responseJSON.import_message;
          let isEmpty  = jqxhr.responseJSON.applications.length === 0
          $("#import_payments_message").append(`<p class="${isEmpty ? "text-danger" : "text-success"}"><svg class="icon-expand icon icon-sm ${isEmpty ? "icon-danger" : "icon-success"} mr-2">
            <use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#${isEmpty ? "it-close" : "it-check"}"></use>
          </svg>${importMessage}</p>`);
        }
      });
    })

    // Add the following code if you want the name of the file appear on select
    $("#subcribers_upload").on("change", function () {
      $("#import_subscribers_errors").html("")
      $("#import_subscribers_message").html("");

      let fileName = $(this).val().split("\\").pop();
      if (fileName) {
        $('#subscribers_file').html(`<li class="upload-file success">
      <svg class="icon icon-sm" aria-hidden="true"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-file"></use></svg>
      <p>${fileName} <span class="upload-file-weight">${getFileSize(this)}</span></p>
      <button disabled>
        <svg class="icon icon-sm icon-success" aria-hidden="true"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-check"></use></svg>
      </button>
    </li>`);
      } else {
        $('.subscribers_file').innerHTML = "";
      }
    });

    // Add the following code if you want the name of the file appear on select
    $("#payments_upload").on("change", function () {
      $("#import_payments_errors").html("");
      $("#import_payments_message").html("");
      var fileName = $(this).val().split("\\").pop();
      if (fileName) {
        $('#payments_file').html(`<li class="upload-file success">
      <svg class="icon icon-sm" aria-hidden="true"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-file"></use></svg>
      <p>${fileName} <span class="upload-file-weight">${getFileSize(this)}</span></p>
      <button disabled>
        <svg class="icon icon-sm icon-success" aria-hidden="true"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-check"></use></svg>
      </button>
    </li>`);
      } else {
        $('.payments_file').innerHTML = "";
      }
    });

    var oldExportAction = function (self, e, dt, button, config) {
      if (button[0].className.indexOf('buttons-excel') >= 0) {
        if ($.fn.dataTable.ext.buttons.excelHtml5.available(dt, config)) {
          $.fn.dataTable.ext.buttons.excelHtml5.action.call(self, e, dt, button, config);
        } else {
          $.fn.dataTable.ext.buttons.excelFlash.action.call(self, e, dt, button, config);
        }
      } else if (button[0].className.indexOf('buttons-csv') >= 0) {
        if ($.fn.dataTable.ext.buttons.csvHtml5.available(dt, config)) {
          $.fn.dataTable.ext.buttons.csvHtml5.action.call(self, e, dt, button, config);
        } else {
          $.fn.dataTable.ext.buttons.csvFlash.action.call(self, e, dt, button, config);
        }
      } else if (button[0].className.indexOf('buttons-print') >= 0) {
        $.fn.dataTable.ext.buttons.print.action(e, dt, button, config);
      } else if ((button[0].className.indexOf('buttons-pdf') >= 0)) {
        if ($.fn.dataTable.ext.buttons.pdfHtml5.available(dt, config)) {
          $.fn.dataTable.ext.buttons.pdfHtml5.action.call(self, e, dt, button, config);
        } else {
          $.fn.dataTable.ext.buttons.pdfFlash.action.call(self, e, dt, button, config);
        }
      }
    };

    var newExportAction = function (e, dt, button, config) {
      var self = this;
      var oldStart = dt.settings()[0]._iDisplayStart;

      dt.one('preXhr', function (e, s, data) {
        // Just this once, load all data from the server...
        data.start = 0;
        data.length = 2147483647;

        dt.one('preDraw', function (e, settings) {
          // Call the original action function
          oldExportAction(self, e, dt, button, config);

          dt.one('preXhr', function (e, s, data) {
            // DataTables thinks the first item displayed is index 0, but we're not drawing that.
            // Set the property to what it was before exporting.
            settings._iDisplayStart = oldStart;
            data.start = oldStart;
          });

          // Reload the grid with the original page. Otherwise, API functions like table.cell(this) don't work properly.
          setTimeout(dt.ajax.reload, 0);

          // Prevent rendering of the full data to the DOM
          return false;
        });
      });

      // Requery the server with the new one-time export settings
      dt.ajax.reload();
    };

    $(document).ready(function () {
      $('#subscriptions').initDataTables({{ datatable_settings(datatable) }}, {
        dom: 'fBrtip',
        searching: true,
        paging: true,
        pagingType: 'simple_numbers',
        buttons: [
          {
            extend: 'excel',
            text: '<i class="fas fa-file-excel"></i><span class="ml-2">Excel</span>',
            title: 'Iscrizioni',
            action: newExportAction,
            className: 'btn btn-link'
          },
          {
            extend: 'csv',
            text: '<i class="fas fa-file-csv"></i><span class="ml-2">CSV</span>',
            title: 'Iscrizioni',
            action: newExportAction,
            className: 'btn btn-link'
          },
          {
            extend: 'pdf',
            text: '<i class="fas fa-file-pdf"></i><span class="ml-2">PDF</span>',
            title: 'Iscrizioni',
            pageSize: 'LEGAL',
            action: newExportAction,
            className: 'btn btn-link'
          },
          {
            extend: 'print',
            text: '<i class="fas fa-print"></i><span class="ml-2">Stampa</span>',
            title: 'Iscrizioni',
            action: newExportAction,
            className: 'btn btn-link'
          }
        ],
        "language": {
          "sEmptyTable": "Nessun dato presente nella tabella",
          "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
          "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
          "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
          "sInfoPostFix": "",
          "sInfoThousands": ".",
          "sLengthMenu": "Visualizza _MENU_ elementi",
          "sLoadingRecords": "Caricamento...",
          "sProcessing": '<div class="progress-spinner progress-spinner-double progress-spinner-active">\n' +
            '        <div class="progress-spinner-inner"></div>\n' +
            '        <div class="progress-spinner-inner"></div>\n' +
            '        <span class="sr-only">Caricamento...</span>\n' +
            '      </div>',
          "sSearch": "Ricerca",
          "sZeroRecords": "La ricerca non ha portato alcun risultato.",
          "oPaginate": {
            "sFirst": "Inizio",
            "sPrevious": "Precedente",
            "sNext": "Successivo",
            "sLast": "Fine"
          },
          "oAria": {
            "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
            "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
          }
        },
        initComplete: function () {
          // Add data-title attribute
          $('#subscriptions thead tr th').each(function (index, element) {
            index += 1;
            $('tr td:nth-child(' + index + ')').attr('data-title', element.innerHTML);
          });

          // Use bootstrap buttons for pagination
          $('a.paginate_button').addClass('btn');
          // Add margin bottom to datatables info
          $('#dt_info').css('margin-bottom', '0.85em')

          $("#file-input2").on("change", function (e) {
            var fdata = new FormData();

            fdata.append("upload", this.files[0]);
            $.ajax({
              url: "{{ path('operatori_importa_csv_iscrizioni', { 'subscriptionService': subscriptionService.id }) }}",
              type: "post",
              data: fdata, //add the FormData object to the data parameter
              processData: false, //tell jquery not to process data
              contentType: false, //tell jquery not to set content-type
              success: function (response, status, jqxhr) {
                location.reload();
              },
              error: function (jqxhr) {
                // todo: manage error
                let errors = jqxhr.responseJSON.errors || [];
                errors.forEach(function (error) {
                  let inputForm = `<p class="text-danger"><svg class="icon-expand icon icon-danger">
            <use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-download"></use>
          </svg>${error.error}</p>`;
                  $("#errors").append(inputForm);
                })
              }
            });
          });
        }
      }).then(function (dt) {
        dt.buttons().container().children().each(function (index, elem) {
          var listViewItem = document.createElement('li');
          listViewItem.append(elem);
          $('#export_list').append(listViewItem);
        })
        $("#dropdown_group").appendTo(".dt-buttons");
        $('#dropdown_group').removeClass('d-none');
      })
    });
  </script>

{% endblock %}

{% block main_content %}
  <section id="intro" class="container px-4 my-4">
    <div id="token" class="hidden" data-token='{{ token }}'></div>
    <div id="errors"></div>
    <div class="row">
      <div class="col-lg-12 px-lg-4 py-lg-2">
        <h1> {{ subscriptionService.name }} / {{ 'iscrizioni.subscriptions' | trans }}</h1>
      </div>
      <div class="col-lg-12 px-lg-4 py-lg-2 mt-4">
        <div id="no-more-tables" class="table-striped">
          <div id="subscriptions"></div>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-12 px-lg-4 py-lg-2 mx-2 my-2">
        <a class="btn btn-100 mr-1 btn-sm"
           href="{{ path('operatori_subscription-service_show', { 'subscriptionService': subscriptionService.id }) }}">{{ 'iscrizioni.back_to_service' | trans }}</a>
        <a class="btn btn-100 btn-sm"
           href="{{ path('operatori_subscription-service_index') }}">{{ 'iscrizioni.back_to_list' | trans }}</a>
      </div>
    </div>
    <div id="dropdown_group" class="d-none">
      <div class="btn-group">
        <button id="export_button" type="button" class="btn btn-primary btn-xs dropdown-toggle"
                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          <svg class="icon-expand icon icon-sm icon-light">
            <use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-download"></use>
          </svg>
          {{ 'iscrizioni.export' | trans }}
          <svg class="icon-expand icon icon-sm icon-light">
            <use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-expand"></use>
          </svg>
        </button>
        <div class="dropdown-menu">
          <div class="link-list-wrapper">
            <ul class="link-list w-max-content" id="export_list">
            </ul>
          </div>
        </div>
      </div>
      <div class="btn-group">
        <button id="import_button" type="button" class="btn btn-primary btn-xs dropdown-toggle"
                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          <svg class="icon-expand icon icon-sm icon-light">
            <use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-upload"></use>
          </svg>
          {{ 'iscrizioni.import' | trans }}
          <svg class="icon-expand icon icon-sm icon-light">
            <use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-expand"></use>
          </svg>
        </button>
        <div class="dropdown-menu">
          <div class="link-list-wrapper">
            <ul class="link-list w-max-content">
              <li>
                <button type="button" class="btn btn-link" data-toggle="modal"
                        data-target="#modal_import_subscriptions">
                  <i class="fas fa-user-plus mr-2"></i><span>{{ 'iscrizioni.subscriptions' | trans }}</span>
                </button>
              </li>
              <li>
                <button type="button" class="btn btn-link" data-toggle="modal" data-target="#modal_import_payments">
                  <i class="fas fa-credit-card mr-2"></i><span>{{ 'iscrizioni.payments' | trans }}</span>
                </button>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
    {{ include('@App/SubscriptionServices/parts/subscriptionsModal.html.twig') }}
    {{ include('@App/SubscriptionServices/parts/paymentsModal.html.twig') }}
    {{ include('@App/Subscriptions/parts/_modal_edit.html.twig', {'subscriptionServices': subscriptionServices}) }}
    {{ include('@App/Subscriptions/parts/_modal_delete.html.twig') }}
    {{ include('@App/Subscriptions/parts/_modal_withdraw.html.twig') }}
    {{ include('@App/Subscriptions/parts/_modal_activate.html.twig') }}
  </section>
{% endblock %}
