{% extends '@App/Default/index.html.twig' %}

{% block stylesheets %}
  {{ parent() }}
  <link rel="stylesheet" type="text/css"
        href="{{ asset('bundles/app/css/jquery-ui.min.css') }}"/>
  <link rel="stylesheet" type="text/css"
        href="{{ asset('bundles/app/css/component-chosen.min.css') }}"/>
  <link rel="stylesheet" type="text/css"
        href="{{ asset('bundles/app/css/daterangepicker.css') }}"/>
  <style>
    .ui-tooltip {font-size: .8em;}
    .filter-query .bootstrap-select{flex-grow: 2}
    .filter-query .input-group-append{flex-grow: 1}
    tr[data-href] {cursor: pointer;}
    td{word-break: break-word;}
    .loader {
      border: 2px solid #fff;
      border-radius: 50%;
      border-top: 2px solid #333;
      width: 14px;
      height: 14px;
      -webkit-animation: spin 2s linear infinite;
      animation: spin 2s linear infinite;
      display: inline-block;
      vertical-align: middle;
    }
    @-webkit-keyframes spin {
      0% { -webkit-transform: rotate(0deg); }
      100% { -webkit-transform: rotate(360deg); }
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    .label-sm-wrapper > label {
      position: absolute;
      color: #435a70;
      font-size: 0.77778rem;
      display: block;
      font-weight: 600;
      padding: 0 0.5rem;
      line-height: calc(2.5rem - 1px);
      top: 0;
      transform: translateY(-75%);
    }
    .chosen-container-single .chosen-search input[type="text"]{
      height: auto;
    }
    .chosen-container{
      margin-top: 5px;
    }
    .chosen-input{
      background-color: #fff !important;
      border: 1px solid #ced4da !important;
      outline: 0 !important;
      border-radius: .25rem !important;
      padding: .25rem 1rem .25rem .5rem !important;
      width: 100% !important;
      height: calc(1.5em + .75rem) !important;
      transition: none !important;
      margin-top: 5px;
    }
  </style>
{% endblock %}

{% block javascripts %}

  <script src="{{ asset('bundles/app/js/jquery.min.js') }}"></script>
  <script src="{{ asset('bundles/app/js/jquery-ui.min.js') }}"></script>
  <script src="{{ asset('bundles/app/js/moment.js') }}"></script>
  <script src="{{ asset('bundles/app/js/moment-it.js') }}"></script>
  <script src="{{ asset('bundles/app/js/jsrender.min.js') }}"></script>
  <script src="{{ asset('bundles/app/js/chosen.jquery.min.js') }}"></script>
  <script src="{{ asset('bundles/app/js/daterangepicker.js') }}"></script>
  <script>
    $.views.helpers({
      'formatId': function (id) {
        return id.split('-')[4];
      },
      'formatDate': function (date, format) {
        return moment.unix(date).format(format);
      },
      'formatStatus': function (state) {
        var name = '?';
        var selector = $('#filter-stato option[value="'+state+'"]');
        if (selector.length > 0){
          return selector.text();
        }
        return name;
      },
      'formatService': function (service) {
        var name = '?';
        var selector = $('#filter-servizio option[data-slug="'+service+'"]');
        if (selector.length > 0){
          return selector.data('name');
        }
        return name;
      },
      'assignUrl': function (id) {
        return $('#results-data').data('assign').replace('X', id);
      },
      'showUrl': function (id) {
        return $('#results-data').data('show').replace('X', id);
      },
      'checkTypeData': function (value) {
        if(typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean' ){
          return value.toString();
        }else if(Array.isArray(value)){
          if (value.some(e => e.hasOwnProperty('data'))) {
            return 'NÂ° file: '+ value.length;
          }
          return value;
        }
      }
    });
    $.fn.animateHighlight = function (highlightColor, duration) {
      var highlightBg = highlightColor || "#00cf86";
      var animateMs = duration || 2000;
      var originalBg = this.css("background-color");
      if (!originalBg || originalBg === highlightBg)
        originalBg = "#FFFFFF"; // default to white
      jQuery(this)
        .css("backgroundColor", highlightBg)
        .animate({ backgroundColor: originalBg }, animateMs, null, function () {
          jQuery(this).css("backgroundColor", originalBg);
        });
    };
    $.extend({
      distinct : function(anArray) {
        var result = [];
        $.each(anArray, function(i,v){
          if ($.inArray(v, result) === -1) result.push(v);
        });
        return result;
      }
    });
    $(document).ready(function () {
      var localStoragePrefix = '{{ instance_service.currentInstance }}-';
      var resultsContainer = $('#results-data');
      var spinnerTemplate = $.templates("#tpl-spinner");
      var emptyTemplate = $.templates("#tpl-empty");
      var resultsTemplate = $.templates("#tpl-result");
      var defaultLimit = 10;
      var reset = $('#reset');
      var filtersContainer = $('#filters');
      var filterServizio = $('#filter-servizio');
      var filterStato = $('#filter-stato');
      var filterWorkflow = $('#filter-workflow');
      var filterQueryBy = $('#filter-query-by');
      var filterQuery = $('#filter-query');
      var filterPratiche = $('#filter-pratiche');
      var filterCollate = $('#filter-collate');
      var filterStatusRange = $('input[name="status-range"]');
      var chosenSelect = $('.form-control-chosen');
      var sort = 'submissionTime';
      var order = 'asc';

      chosenSelect.chosen();
      filterStatusRange.daterangepicker({
        "locale": {
          "format": "DD/MM/YYYY HH:mm",
          "separator": " - ",
          "applyLabel": "Applica",
          "cancelLabel": "Cancella",
          "fromLabel": "Da",
          "toLabel": "A",
          "customRangeLabel": "Personalizzato",
          "weekLabel": "Set",
          "daysOfWeek": ["Do","Lu","Ma","Me","Gi","Ve","Sa"],
          "monthNames": ["Gennaio","Febbraio","Marzp","Aprile","Maggio","Giugno","Luglio","Agosto","Settembre","Ottobrr","Novembre","Dicembre"],
          "firstDay": 1
        },
        timePicker: true,
        timePicker24Hour: true,
        alwaysShowCalendars: true,
        autoUpdateInput: false,
        opens: "center",
        ranges: {
          'Oggi': [moment().startOf('day'), moment().endOf('day')],
          'Ieri': [moment().subtract(1, 'days').startOf('day'), moment().subtract(1, 'days').endOf('day')],
          'Questa settimana': [moment().startOf('week'), moment().endOf('week')],
          'Settimana scorsa': [moment().subtract(1, 'week').startOf('week'), moment().subtract(1, 'week').endOf('week')],
          'Questo mese': [moment().startOf('month'), moment().endOf('month')],
          'Mese scorso': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
        }
      }).on('apply.daterangepicker', function(ev, picker) {
        filterStatusRange.data('start', picker.startDate.format('X'));
        filterStatusRange.data('end', picker.endDate.format('X'));
        $(this).val(picker.startDate.format('DD/MM/YYYY HH:mm') + ' - ' + picker.endDate.format('DD/MM/YYYY HH:mm'));
        loadContents();
      }).on('cancel.daterangepicker', function(ev, picker) {
        filterStatusRange.removeData('start').removeData('end').val('');
        loadContents();
      });

      var viewSettingsStorage = {
        setItem: function (key, value) {
          if (typeof (Storage) !== "undefined") {
            localStorage.setItem(localStoragePrefix+key, JSON.stringify(value));
          }
        },
        getItem: function (key, fallback) {
          if (typeof (Storage) !== "undefined") {
            if (localStorage.getItem(localStoragePrefix+key)) {
              var value = localStorage.getItem(localStoragePrefix + key);
              try {
                return JSON.parse(value);
              } catch (e) {
                return value;
              }
            }
          }

          return fallback || null;
        },
        hasItem: function (key) {
          if (typeof (Storage) !== "undefined") {
            return !(localStorage.getItem(localStoragePrefix+key) === null);
          }
          return  false
        },
        displayField: function (needle, haystack) {
          return haystack[key];
        }
      };

      var buildParams = function(){
        var params = {
          'gruppo': null,
          'servizio': null,
          'stato': filterStato.val(),
          'workflow': filterWorkflow.val(),
          'query_field': filterQueryBy.val(),
          'query': filterQuery.val(),
          'sort': sort || 'submissionTime',
          'order': order || 'asc',
          'limit': filterPratiche.val() != null ? filterPratiche.val() : defaultLimit,
          'collate': filterCollate.is(':checked') ? 1 : 0,
          'last_status_change': filterStatusRange.data('start') ? [filterStatusRange.data('start'),filterStatusRange.data('end')] : []
        };
        if (filterServizio.children("option:selected").data('type') === 'group') {
          params.gruppo = filterServizio.val();
        } else {
          params.servizio = filterServizio.val();
        }
        viewSettingsStorage.setItem('pratiche_filters', params);
        return params;
      };

      var isEmpty = function(object) {
        return object.servizio === ''
          && object.gruppo === ''
          && object.stato === ''
          && object.workflow === ''
          && object.query === ''
          && object.collate !== 1
          && object.last_status_change === [];
      };

      reset.on('click', function (e) {
        if (typeof (Storage) !== "undefined"){
          viewSettingsStorage.setItem('pratiche_filters', {
            'gruppo': '',
            'servizio': '',
            'stato': '',
            'workflow': '',
            'query_field': '1',
            'query': '',
            'limit': defaultLimit,
            'collate': 0,
            'last_status_change': []
          });
        }
        filterStatusRange.removeData('start').removeData('end').val('');
        window.location.reload();
        e.preventDefault();
      });

      var showReset = function(){
        reset.parent().show();
      };

      var hideReset = function(){
        reset.parent().hide();
      };

      filtersContainer.find('.filter-select').on('change', function () {
        loadContents();
      });
      filterCollate.on('change', function () {
        loadContents();
      })
      filterQuery.on('keydown', function(e) {
        if (e.keyCode === 13) {
          loadContents();
        }
      });

      var loadContents = function() {
        resultsContainer.html(spinnerTemplate.render({}));
        var params = buildParams();
        if (isEmpty(params)){
          hideReset();
        }else{
          showReset();
        }
        params.offset = 0;
        $.get(resultsContainer.data('source'), params, function (response) {
          loadResponse(response);
        });
      };

      var loadUrl = function(url) {
        if (url.length) {
          resultsContainer.html(spinnerTemplate.render({}));
          $.get(url, function (response) {
            loadResponse(response);
          });
        }
      };

      var refreshDownloadButton = function (response) {
        var downloadParams = $.extend({}, response.meta.parameter);
        downloadParams['extra_headers[]'] = []
        $.each(response.meta.schema, function () {
          var fields = viewSettingsStorage.getItem('fields-'+response.meta.parameter.servizio, []);
          if ($.inArray(this.name, fields) > -1) {
            downloadParams['extra_headers[]'].push(
              $.trim(resultsContainer.find('input[data-show="' + this.name + '"]').data('label'))
            );
          }
        });
        var downloadButton = resultsContainer.find('[data-download="true"]');
        downloadButton.attr('href',downloadButton.data('href')+'?'+jQuery.param(downloadParams, true));
      };

      var refreshCalculatedFields = function (response) {
        var calcParams = $.extend({}, response.meta.parameter);
        var tbody = $('tbody.calc');
        tbody.css('display', 'none');
        tbody.find('div.calc').css('display', 'none');
        resultsContainer.find('input[data-function]').each(function () {
          var func = $(this).data('function');
          var divFunc = $('div.calc-'+func);
          var storageCalculateKey = 'calculate-'+func+'-'+response.meta.parameter.servizio;
          var calculateFields = viewSettingsStorage.getItem(storageCalculateKey, []);
          if (calculateFields.length > 0){
            tbody.css('display', 'table-row-group');
            $.each(calculateFields, function () {
              resultsContainer.find('[data-function="' + func + '"][data-calculate="' + this + '"]').prop('checked', true);
              tbody.find('[data-key="'+this+'"] div.calc-'+func).css('display', 'block');
              divFunc.find('[data-calc="'+this+'"]').html('<div class="loader"></div>');
            })
            calcParams[func+'[]'] = calculateFields;
          }
        });
        $.get(tbody.data('source'), calcParams, function (calcResponse) {
          $.each(calcResponse, function (func, values) {
            $.each(values, function (key, value) {
              $('div.calc-'+func).find('[data-calc="'+key+'"]').html(value);
            });
          });
        });
      };

      $('#reload').on('click', function (e) {
        loadContents();
        e.preventDefault();
      });

      var loadResponse = function(response){
        if (response.meta.count === 0) {
          resultsContainer.html(emptyTemplate.render({}));
        } else {
          response.currentPage = response.meta.count > 0 ?
            (response.meta.parameter.offset > 0 ? Math.ceil(response.meta.parameter.offset/response.meta.parameter.limit)+1 : 1)
            : 0;
          response.pageCount = response.meta.count > 0 ? Math.ceil(response.meta.count/response.meta.parameter.limit) : 0;
          var result = $(resultsTemplate.render(response));
          resultsContainer.html(result);
          resultsContainer.find('a.page').on('click', function (e) {
            loadUrl($(this).data('url'));
            e.preventDefault();
          });
          resultsContainer.find('a[data-sort]').on('click', function (e) {
            sort = $(this).data('sort');
            order = $(this).data('order');
            loadContents();
            e.preventDefault();
          });

          resultsContainer.find('.copy').click(function (e) {
            e.preventDefault();
            var button = $(this);
            var temp = $("<input>");
            $("body").append(temp);
            temp.val(button.data('copy')).select();
            document.execCommand("copy");
            temp.remove();
            button.animateHighlight();
          });
          resultsContainer.find('tr[data-href]').on('click', function (e) {
            if(e.target.tagName === 'TD') {
              window.location = $(this).data('href');
            }
          });
          refreshDownloadButton(response);
          resultsContainer.find('[data-toggle="tooltip"]').tooltip();

          if (response.meta.schema) {

            resultsContainer.find('[data-dismiss="modal"]').on('click',function (e) {
              refreshCalculatedFields(response);
            })

            var storageShowKey = 'fields-'+response.meta.parameter.servizio;
            var fields = viewSettingsStorage.getItem(storageShowKey, []);
            resultsContainer.find('input[data-show]').on('change', function () {
              var fieldKey = $(this).data('show');
              if ($(this).is(':checked')) {
                resultsContainer.find('[data-key="' + fieldKey + '"]').css('display', 'table-cell');
                fields.push(fieldKey);
              } else {
                resultsContainer.find('[data-key="' + fieldKey + '"]').css('display', 'none');
                resultsContainer.find('[data-calculate="' + fieldKey + '"]').prop('checked', false).trigger('change');
                fields = jQuery.grep(fields, function(value) {
                  return value !== fieldKey;
                });
              }
              viewSettingsStorage.setItem(storageShowKey, $.distinct(fields));
              refreshDownloadButton(response);
            });
            resultsContainer.find('input[data-calculate]').on('change', function () {
              var fieldKey = $(this).data('calculate');
              if ($(this).is(':checked')) {
                resultsContainer.find('[data-show="' + fieldKey + '"]').prop('checked', true).trigger('change');
              }
            });

            resultsContainer.find('input[data-calculate]').on('change', function () {
              var func = $(this).data('function');
              var fieldKey = $(this).data('calculate');
              var storageCalculateKey = 'calculate-'+func+'-'+response.meta.parameter.servizio;
              var calculateFields = viewSettingsStorage.getItem(storageCalculateKey, []);
              if ($(this).is(':checked')) {
                calculateFields.push(fieldKey);
              } else {
                calculateFields = jQuery.grep(calculateFields, function(value) {
                  return value !== fieldKey;
                });
              }
              viewSettingsStorage.setItem(storageCalculateKey, $.distinct(calculateFields));
            });

            $.each(response.meta.schema, function () {
              if ($.inArray(this.name, fields) > -1) {
                resultsContainer.find('input[data-show="' + this.name + '"]').trigger('click');
              }
            });
            refreshCalculatedFields(response);
          }

        }
      };

      if (viewSettingsStorage.hasItem('pratiche_filters')){
        var params = viewSettingsStorage.getItem('pratiche_filters');
        filterServizio.val(params.servizio);
        filterStato.val(params.stato);
        filterWorkflow.val(params.workflow);
        filterQueryBy.val(params.query_field);
        filterQuery.val(params.query);
        filterPratiche.val(params.limit ? params.limit : defaultLimit);
        sort = params.sort;
        order = params.order;
        if (params.collate === 1){
          filterCollate.prop('checked', true);
        }else{
          filterCollate.prop('checked', false);
        }
        showReset();
        chosenSelect.trigger("chosen:updated");
        if ($.isArray(params.last_status_change) && params.last_status_change.length === 2){
          filterStatusRange.data('start', params.last_status_change[0]);
          filterStatusRange.data('end', params.last_status_change[1]);
          filterStatusRange.val(moment.unix(params.last_status_change[0]).format('DD/MM/YYYY HH:mm') + ' - ' + moment.unix(params.last_status_change[1]).format('DD/MM/YYYY HH:mm'));
        }
      }
      loadContents();
    });
  </script>
  {{ parent() }}
{% endblock %}

{% block main_content %}

{% verbatim %}
<script id="tpl-spinner" type="text/x-jsrender">
  <div class="text-center p-5"><div class="loader mb-1"></div> <em>Attendere il caricamento dei dati...</em></div>
</script>
<script id="tpl-empty" type="text/x-jsrender">
  <div class="text-center p-5"><em>Nessuna pratica trovata</em></div>
</script>
<script id="tpl-result" type="text/x-jsrender">
{{if meta.schema}}
<div class="modal fade" id="tableOptions" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="tableOptionsLabel">
  <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
      <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Opzioni tabella</h5>
            <button type="button" class="btn btn-xs btn-primary pull-right" data-dismiss="modal" aria-label="Close">
              Applica e chiudi
            </button>
          </div>
          <div class="modal-body">
            <table class="table table-sm">
            <tr>
                <th></th>
                <th>Visualizza</th>
                <th>Somma</th>
                <th>Media</th>
                <th>Conta</th>
            </tr>
            {{for meta.schema}}
              <tr>
                <td><strong>{{:label}}</strong></td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" data-label="{{:label}}" data-show="{{:name}}" id="{{:name}}">
                    <label class="form-check-label" for="{{:name}}">
                    <svg class="icon icon-sm">
                     <use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-password-visible"></use>
                    </svg>
                    </label>
                  </div>
                </td>
                <td>
                  {{if type == 'number' || true}}
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" data-label="{{:label}}" data-calculate="{{:name}}" data-function="sum" id="sum-{{:name}}">
                    <label class="form-check-label" for="sum-{{:name}}">
                    <svg class="icon icon-sm">
                     <use xlink:href="/bundles/app/images/sdc-sprite.svg#sum"></use>
                    </svg>
                    </label>
                  </div>
                  {{/if}}
                </td>
                <td>
                  {{if type == 'number'|| true}}
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" data-label="{{:label}}" data-calculate="{{:name}}" data-function="avg" id="avg-{{:name}}">
                    <label class="form-check-label" for="avg-{{:name}}">
                    <svg class="icon icon-sm">
                     <use xlink:href="/bundles/app/images/sdc-sprite.svg#avg"></use>
                    </svg>
                    </label>
                  </div>
                  {{/if}}
                </td>
                <td>
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" data-label="{{:label}}" data-calculate="{{:name}}" data-function="count" id="count-{{:name}}">
                    <label class="form-check-label" for="count-{{:name}}">
                    <svg class="icon icon-sm">
                     <use xlink:href="/bundles/app/images/sdc-sprite.svg#count"></use>
                    </svg>
                    </label>
                  </div>
                </td>
              </tr>
            {{/for}}
            </table>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-xs btn-primary pull-right" data-dismiss="modal" aria-label="Close">
              Applica e chiudi
            </button>
          </div>
      </div>
  </div>
</div>
{{/if}}
<div class="table-responsive mt-3">
<table class="table table-striped table-condensed table-hover" style="width: 100%;font-size:.87em">
  <thead>
    <tr>
      <th style="white-space:nowrap">
        {{if meta.schema}}
          <button type="button" class="btn btn-secondary btn-xs text-nowrap py-1 px-2" data-toggle="modal" data-target="#tableOptions">Opzioni tabella</button>
        {{/if}}
        <a data-download="true" data-href="{% endverbatim %}{{ path('operatori_index_csv') }}{% verbatim %}"  href="#" data-toggle="tooltip" title="Clicca per scaricare i dati in formato CSV" type="button" class="btn btn-default btn-xs p-0">
          <svg class="icon icon-sm icon-primary">
           <use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-download"></use>
          </svg>
        </a>
      </th>
      <th>Login</th>
      <th>Pagamenti</th>
      <th>Richiedente</th>
      <th>Codice fiscale</th>
      <th>
        <div class="d-flex">
          <div class="text-nowrap mr-1">Data di inserimento </div>
          <a href="#" data-sort="submissionTime" data-order="asc"><svg class="icon icon-xs {{if meta.parameter.sort == 'submissionTime' && meta.parameter.order == 'asc'}}icon-black{{else}}icon-light{{/if}}"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-arrow-up"></use></svg></a>
          <a href="#" data-sort="submissionTime" data-order="desc"><svg class="icon icon-xs {{if meta.parameter.sort == 'submissionTime' && meta.parameter.order == 'desc'}}icon-black{{else}}icon-light{{/if}}"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-arrow-down"></use></svg></a>
        </div>
      </th>
      <th>
        <div class="d-flex">
          <div class="text-nowrap mr-1">Ultimo cambio stato </div>
          <a href="#" data-sort="latestStatusChangeTimestamp" data-order="asc"><svg class="icon icon-xs {{if meta.parameter.sort == 'latestStatusChangeTimestamp' && meta.parameter.order == 'asc'}}icon-black{{else}}icon-light{{/if}}"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-arrow-up"></use></svg></a>
          <a href="#" data-sort="latestStatusChangeTimestamp" data-order="desc"><svg class="icon icon-xs {{if meta.parameter.sort == 'latestStatusChangeTimestamp' && meta.parameter.order == 'desc'}}icon-black{{else}}icon-light{{/if}}"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-arrow-down"></use></svg></a>
        </div>
      </th>
      {{if !meta.parameter.stato}}
      <th>Stato</th>
      {{/if}}
      <th>Operatore</th>
      {{if meta.parameter.servizio}}
        {{if meta.schema}}
          {{for meta.schema}}
          <th data-key="{{:name}}" style="display:none">{{:label}}</th>
          {{/for}}
        {{/if}}
      {{else}}
        <th>Servizio</th>
      {{/if}}
    </tr>
  </thead>
  <tbody>
  {{for data ~metadata=meta}}
    <tr data-href="{{:~showUrl(id)}}">
      <td class="text-nowrap">
        {{if can_read}}
          <a class="text-decoration-none" href="{{:~showUrl(id)}}" class="text-nowrap mr-1" data-toggle="tooltip" title="{% endverbatim %}{{ 'operatori.vai_al_dettaglio'|trans }}{% verbatim %}">
            <svg class="icon icon-sm icon-primary"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-file{{if ~metadata.parameter.collate && (children_count > 0 || group )}}s{{/if}}"></use></svg>
          </a>
        {{/if}}
        <button data-toggle="tooltip" title="Clicca per copiare l'id della pratica" type="button" class="btn btn-default btn-xs copy p-0" data-copy="{{:id}}">
          <svg class="icon icon-sm icon-primary"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-info-circle"></use></svg>
        </button>
        {{if protocol_number}}
          <button type="button" data-toggle="tooltip" title="Clicca per copiare il numero di protocollo" class="btn btn-default btn-xs copy p-0" data-copy="{{:protocol_number}}">
            <svg class="icon icon-sm icon-primary"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-key"></use></svg>
          </button>
        {{else is_protocollo_required}}
          <button type="button" data-toggle="tooltip" title="Numero di protocollo in assegnazione" class="btn btn-default text-muted btn-xs p-0">
            <svg class="icon icon-sm icon-200"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-key"></use></svg>
          </button>
        {{/if}}
       </td>
       <td>
        {{if idp == "spid" }}
          <span data-toggle="tooltip" title="IdentitÃ  del cittadino verificata">
            <img class="icon" src={% endverbatim %}"{{ asset('bundles/app/images/spid.svg') }}"{% verbatim %}>
          </span>
        {{/if}}
        {{if idp == "cps/cns" }}
          <span data-toggle="tooltip" title="IdentitÃ  del cittadino verificata">
            <img class="icon" src={% endverbatim %}"{{ asset('bundles/app/images/cns.png') }}"{% verbatim %}>
          </span>
        {{/if}}
      </td>
      <td>
        {{if is_payment_required}}
            {{if payment_complete}}
             <span data-toggle="tooltip" title="Pagamento eseguito">
                <svg class="icon icon-sm icon-primary"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-check-circle"></use></svg>
            </span>
            {{else}}
             <span data-toggle="tooltip" title="In attesa dell'esito del pagamento">
                <svg class="icon icon-sm icon-200"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-clock"></use></svg>
            </span>
            {{/if}}
          </span>
        {{else}}
          <span data-toggle="tooltip" title="Non Ã¨ previsto un pagamento">
                <svg class="icon icon-sm icon-200"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-minus"></use></svg>
            </span>
        {{/if}}
      </td>
      <td style="white-space: nowrap">
        {{:user_name}}
        {{if idp != "anonymous"}}
          <span data-toggle="tooltip" title="IdentitÃ  del cittadino verificata">
            <svg class="icon icon-xs icon-success"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-check-circle"></use></svg>
          </span>
        {{/if}}
      </td>
      <td style="white-space: nowrap">
        {{:codice_fiscale}}
        {{if idp != "anonymous"}}
          <span data-toggle="tooltip" title="IdentitÃ  del cittadino verificata">
            <svg class="icon icon-xs icon-success"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-check-circle"></use></svg>
          </span>
        {{/if}}
      </td>
      <td class="text-nowrap" data-value="{{:submission_time}}">
        {{if submission_time}}
          {{:~formatDate(submission_time,"{% endverbatim %}{{ocsdc_default_moment_datetime_format}}{% verbatim %}")}}
        {{/if}}
      </td>
      <td class="text-nowrap" data-value="{{:latest_status_change_time}}">
        {{if latest_status_change_time && submission_time != latest_status_change_time }}
          {{:~formatDate(latest_status_change_time,"{% endverbatim %}{{ocsdc_default_moment_datetime_format}}{% verbatim %}")}}
        {{/if}}
      </td>
      {{if !~metadata.parameter.stato}}
      <td>{{:~formatStatus(status)}}</td>
      {{/if}}
      <td>{{if operator_name}}{{:operator_name}}{{/if}}</td>
      {{if ~metadata.parameter.servizio}}
        {{if ~metadata.schema}}
          {{props data}}
          <td data-key="{{>key}}" style="display:none">
           {{:~checkTypeData(prop)}}
          </td>
          {{/props}}
        {{/if}}
      {{else}}
        <td>{{:~formatService(service)}}</td>
      {{/if}}
    </tr>
  {{/for}}
  </tbody>
  {{if meta.parameter.servizio && meta.schema}}
  <tbody class="calc" style="border-bottom: 15px solid white;display: none" data-source="{% endverbatim %}{{ path('operatori_index_calculate') }}{% verbatim %}">
    <tr>
      <th colspan="{{if !meta.parameter.stato}}9{{else}}8{{/if}}" class="bg-white text-right border-0"></th>
      {{for meta.schema}}
        <td class="bg-100 p-1" data-key="{{:name}}" style="display: none;white-space: nowrap">
            <div class="calc calc-sum" style="display: none">
                <svg class="icon icon-xs mr-2">
                 <use xlink:href="/bundles/app/images/sdc-sprite.svg#sum"></use>
                </svg>
                <span data-calc="{{:name}}"></span>
            </div>
            <div class="calc calc-avg" style="display: none;white-space: nowrap">
                <svg class="icon icon-xs mr-2">
                 <use xlink:href="/bundles/app/images/sdc-sprite.svg#avg"></use>
                </svg>
                <span data-calc="{{:name}}"></span>
            </div>
            <div class="calc calc-count" style="display: none;white-space: nowrap">
                <svg class="icon icon-xs mr-2">
                 <use xlink:href="/bundles/app/images/sdc-sprite.svg#count"></use>
                </svg>
                <span data-calc="{{:name}}"></span>
            </div>
        </td>
      {{/for}}
    </tr>
  </tbody>
  {{/if}}
</table>
</div>
<div class="text-center">
{{if links.prev }}
  <a class="btn {{if !links.prev}}btn-disabled text-muted{{else}}btn-link{{/if}} page text-decoration-none text-uppercase" href="#" data-url="{{:links.prev}}"{{if !links.prev}} style="cursor:not-allowed"{{/if}}>
      <svg class="icon"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-chevron-left"></use></svg>
      Precedente
  </a>
{{/if}}
  <span>{{:meta.count}} {{if meta.count == 1}}risultato{{else}}risultati{{/if}} - Pagina {{:currentPage}} di {{:pageCount}}</span>
{{if links.next}}
  <a class="btn {{if !links.next}}btn-disabled text-muted{{else}}btn-link{{/if}} page text-decoration-none text-uppercase" href="#" data-url="{{:links.next}}"{{if !links.next}} style="cursor:not-allowed"{{/if}}>
      Successivo
      <svg class="icon"><use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-chevron-right"></use></svg>
  </a>
{{/if}}
</div>
</script>
{% endverbatim %}

  <section class="p-3 pt-5">
    <div id="filters">
      <div class="row">
        {% if servizi|length %}
          <div class="col-12 col-sm-6 col-lg-4 mb-5">
            <div class="label-sm-wrapper filter-servizio">
              <label for="filter-servizio">Filtra per servizio</label>
              <select id="filter-servizio" class="form-control filter-select form-control-chosen">
                <option value="">Tutti</option>
                {% for servizio in servizi %}
                  {% if servizio is iterable %}
                    <option data-type="group" data-slug="{{ servizio.group.slug }}" data-name="{{ servizio.group.name }}" value="{{ servizio.group.id }}">{{ servizio.group.name }}</option>
                    {% for s in servizio.services %}
                      <option data-type="service" data-slug="{{ s.slug }}" data-name="{{ s.name }}" value="{{ s.id }}"> - {{ s.name }}</option>
                    {% endfor %}
                  {% else %}
                    {# users is probably a string #}
                    <option data-type="service" data-slug="{{ servizio.slug }}" data-name="{{ servizio.name }}" value="{{ servizio.id }}">{{ servizio.name }}</option>
                  {% endif %}

                {% endfor %}
              </select>
            </div>
          </div>
        {% endif %}
        {% if stati|length %}
          <div class="col-12 col-sm-6 col-lg-4 mb-5">
            <div class="label-sm-wrapper filter-stato">
              <label for="filter-stato">Filtra per stato</label>
              <select id="filter-stato" class="form-control filter-select form-control-chosen">
                <option value="">Tutti</option>
                {% for stato in stati %}
                  <option value="{{ stato.id }}">{{ stato.name|trans }}</option>
                {% endfor %}
              </select>
            </div>
          </div>
        {% endif %}
        <div class="col-12 col-sm-6 col-lg-4 mb-5">
          <div class="label-sm-wrapper filter-workflow">
            <label for="filter-workflow">Filtra per lavorazione</label>
            <select id="filter-workflow" class="form-control filter-select form-control-chosen">
              <option value="">Tutte</option>
              <option value="owned">In carico a {{ user.fullName }}</option>
              <option value="unassigned">Da assegnare</option>
            </select>
          </div>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-5 mb-md-0">
          <div class="bootstrap-select-wrapper filter-query">
            <label for="filter-query-by">Cerca per</label>
            <div class="input-group">
              <select class="form-control" id="filter-query-by" name="query-by">
                <option value="2">Nome utente</option>
                <option value="1">Codice fiscale</option>
                <option value="3">ID Pratica</option>
              </select>
              <div class="input-group-append">
                <input type="text" class="form-control" name="query" id="filter-query" placeholder="Testo da cercare">
              </div>
            </div>
          </div>
        </div>
        <div class="col-6 col-sm-6 col-md-4 col-lg-1 mb-5">
          <div class="label-sm-wrapper">
            <label for="filter-pratiche" class="text-nowrap overflow-hidden mw-100">Risultati per pagina</label>
            <select id="filter-pratiche" class="form-control filter-select form-control-chosen">
              <option value="10">10</option>
              <option value="25">25</option>
              <option value="50">50</option>
              <option value="100">100</option>
            </select>
          </div>
        </div>
        <div class="col-6 col-sm-6 col-md-8 col-lg-3 mb-5">
          <div class="label-sm-wrapper">
            <label for="filter-status-range">Ultimo cambio stato</label>
            <input type="text" id="status-range" name="status-range" class="chosen-input" onkeydown="event.preventDefault()">
          </div>
        </div>
        <div class="col-6 col-sm-6 col-md-4 col-lg-2">
          <div class="form-check">
            <div class="toggles">
              <label for="filter-collate">
                Fascicola
                <input type="checkbox" id="filter-collate">
                <span class="lever" style="position: relative;z-index: 10;"></span>
              </label>
            </div>
          </div>
        </div>
        <div class="col-6 col-sm-6 col-lg-2">
          <a id="reset" class="btn btn-secondary btn-xs btn-icon p-2 mr-2" href="#">
            <svg class="icon icon-white">
              <use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-close-big"></use>
            </svg>
            <span>Annulla ricerca</span>
          </a>
          <a id="reload" class="btn btn-secondary btn-xs btn-icon p-2" href="#">
            <svg class="icon icon-white">
              <use xlink:href="/bootstrap-italia/dist/svg/sprite.svg#it-refresh"></use>
            </svg>
            <span class="d-none">Ricarica ricerca</span>
          </a>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-12" id="results-data"
           data-show="{{ path('operatori_show_pratica', {'pratica': 'X'}) }}"
           data-assign="{{ path('operatori_autoassing_pratica', {'pratica': 'X'}) }}"
           data-source="{{ path('operatori_index_json') }}"></div>
    </div>
  </section>


{% endblock %}
