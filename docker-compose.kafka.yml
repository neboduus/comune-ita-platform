version: "3.8"

services:

  php:
    environment:
      KAFKA_URL: vector

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "applications,services,messages,payments,calendars"

  ksqldb-server:
    image: confluentinc/ksqldb-server:0.23.1
    ports:
      - "8088:8088"
    depends_on:
      - kafka
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      #KSQL_KSQL_QUERIES_FILE: /tmp/statements.sql

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.28.2
    depends_on:
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

  vector:
    image: timberio/vector:0.18.1-debian
    volumes:
      - ./compose_conf/kafka/vector.toml:/etc/vector/vector.toml
    environment:
      VECTOR_LOG: debug
    labels:
      traefik.enable: 'true'
      traefik.docker.network: 'default'
      traefik.http.services.vector.loadbalancer.server.port: 80

      traefik.http.services.vector.loadbalancer.healthcheck.path: /health
      traefik.http.services.vector.loadbalancer.healthcheck.port: 8686
      traefik.http.services.vector.loadbalancer.healthcheck.interval: 30s

      # 404 a chi scommenta! traefik.http.routers.vector.entrypoints: 'websecure'
      #traefik.http.routers.vector.entrypoints: 'backplane'
      traefik.http.routers.vector.rule: 'METHOD(`POST`) && Host(`vector.localtest.me`)'

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      # KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_KSQLDBSERVER: ksqldb-server:8088
    labels:
      traefik.enable: 'true'
      traefik.docker.network: 'default'
      traefik.http.services.kafka-ui.loadbalancer.server.port: 8080
      traefik.http.routers.kafka-ui.rule: 'Host(`kafka-ui.localtest.me`)'

